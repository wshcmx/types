declare namespace tools_cl {
  let generic_folder_prefix: XmlElem<string | null>;
  function html_decode(sourceHTML: string): string;
  function is_true_cl(value: string): unknown;
  function resource_tag(resourseId: number, fileNAme: string): unknown;
  function imprint(source: string): unknown;
  function convertToB62(number: number): unknown;
  function recursive_copy_url(sourceURL: string, destURL: string): unknown;
  function reveal_riches(text: string): unknown;
  let xsl_assembly: XmlElem<unknown | null>;
  function xsl_transform(xslString: unknown, xmlString: unknown, aParams: unknown): unknown;
  function lexicise_it(source: unknown, inverse: unknown): unknown;
  function polska_functzia(source: unknown, isPostfix: unknown): unknown;
  function transform_event(eventXML: Object, eventNode: string): unknown;
  function convertHTML2BB(hTML: string): unknown;
  function convertBB2HTML(bB: string): unknown;
  function xmlSubstituteConsts(xmlData: unknown, path: unknown, aConsts: unknown, prefix: unknown, useShared: boolean, localizationId: number, courseId: number): unknown;
  function search_dupe_const(courseId: number, localizationId: number, text: unknown): unknown;
  function get_object(vIdentifier: unknown, openDoc: boolean): unknown;
  function process_resources(source: string, makeMyPrefix: string, regExpObject: Object, xarrMyResources: unknown, resourceImbue: boolean, overwrite: boolean, repositoriumTARGET: RepositoriumDocument, curUserId: number, userTopElem: XmlTopElem, codeIdentifier: string, fileUrl: string): unknown;
  function i_get_my_roleid(curUserId: number, userTopElem: XmlTopElem): unknown;
  function is_author_of_type(vCourse: unknown, userId: number, type: number): unknown;
  let log_obj: XmlElem<unknown | null>;
  function log_cl_create(): unknown;
  function log_cl_log(mSG: string): unknown;
  function get_cl_log(): unknown;
  function update_params(paramsxml: string, etalonXml: string, vObject: unknown, options: Object): unknown;
  function param_update_constants(xml: unknown, path: string, slIdeId: number, frameId: number, slIdeObjectId: number, courseId: number, localizationId: number, useShared: boolean): unknown;
  function get_constant_by_tag(text: string, objectId: number): unknown;
  function create_constant(text: string, objectId: number, objectCatalog: unknown, localizationId: number, type: Object, originalValue: unknown, suggestedCode: string): unknown;
  function obtain_constant(constantCode: string, localizationId: number, localizationValue: unknown, objectId: number, objectCatalog: unknown, flags: Object): unknown;
  function build_constant_prefix(slIdeId: string, frameId: string, objectId: string): unknown;
  function summon_constants(objectId: number, textData: string, locId: number): unknown;
  function summon_aux_const(course: unknown, param: unknown, locId: number): unknown;
  function export_scorm(cLCourseId: number, curUserId: number, locId: number, paramsZipUrl: string): unknown;
  function build_wcl_back(cLCourseId: number): unknown;
  function build_object_xml(clObjId: number, wTD: string): unknown;
  function build_shape_xml(clShapeId: number): unknown;
  function build_module_xml_back(clModuleId: number): unknown;
  function build_slide_xml_back(clSlIdeId: number): unknown;
  function build_object_in_slide_xml(fldObjectElem: unknown, designTime: boolean, locId: number, courseId: number): unknown;
  function load_slide_from_xml_object(xmlSlIde: unknown, courseCode: string, moduleId: number, courseId: number, slIde: unknown, tryUpdate: boolean, tryXSlRetransform: boolean, localizationId: number): unknown;
  function load_module_from_description(workingDirUrl: string, xmlModuleDescription: unknown, courseCode: string, courseId: number, repositorium: unknown, userId: number, userTopElem: XmlTopElem, localizationId: number): unknown;
  function load_module_from_xml_object(moduleXML: Object, vModule: unknown, courseId: number, xmlModuleDescription: unknown, sAiccCode: unknown, tryUpdate: boolean, template: boolean, localizationId: number): unknown;
  function manual_import_course_routine(): unknown;
  function import_course_routine(wCLUrl: string, course2: Object, cLCourse: unknown, repositoryId: number, userId: number, userTopElem: XmlTopElem, localizationId: number): unknown;
  function import_objects_from_list(xmlUrl: string, mode: string): unknown;
  function import_autoshape_from_folder(folderUrl: string, label: string): unknown;
  function import_module_templates_from_folder(folderUrl: string, label: string, localizationId: number): unknown;
  function import_objects_from_folder(folderUrl: string, label: string): unknown;
  function manual_import_objects_from_pack(mode: string): unknown;
  function import_objects_from_pack(fileUrl: string, mode: string): unknown;
  function generate_runtime_xml_cache(moduleId: number, moduleTopElem: XmlTopElem, curUserId: number, splash: boolean, locId: number, auxParams: Object): unknown;
  function generate_runtime_xml(moduleId: number, moduleTopElem: XmlTopElem, curUserId: number, splash: boolean, locId: number, auxParams: Object): unknown;
  function prepare_module_deserialization(moduleUrl: string, codeIdentifier: string, repositoriumTARGET: unknown, curUserId: number, userTopElem: XmlTopElem, overwrite: boolean): unknown;
  function eradicate_slide(cLSlIde: unknown): unknown;
  function make_module_real(cLCourse: unknown, moduleTepmlate: unknown, repositoriumTARGET: unknown, curUserId: number, userTopElem: XmlTopElem, xmlModuleDescription: unknown, immaterialSlIdes: boolean, localizationId: number): unknown;
  function read_resource(rTag: string, result: number): unknown;
  function export_constants(objectId: string, locoSourceId: number, locoTargetId: number, fileUrl: string): unknown;
  function import_constants(objectTopElem: XmlTopElem, xlsFileUrl: string): unknown;
  function convert_object_titles(objectId: number, localizationId: number): unknown;
}
